{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "region1": {
      "type": "string",
      "defaultValue": "eastus",
      "allowedValues": [
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "usgovvirginia",
        "usgoviowa",
        "usdodeast",
        "usdodcentral",
        "usgovtexas",
        "usgovarizona"
      ]
    },
    "region2": {
      "type": "string",
      "defaultValue": "westus",
      "allowedValues": [
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "usgovvirginia",
        "usgoviowa",
        "usdodeast",
        "usdodcentral",
        "usgovtexas",
        "usgovarizona"
      ]
    },
    "region3": {
      "type": "string",
      "defaultValue": "westus",
      "allowedValues": [
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "usgovvirginia",
        "usgoviowa",
        "usdodeast",
        "usdodcentral",
        "usgovtexas",
        "usgovarizona"
      ]
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "privateUser"
    },
    "adminPassword": {
      "type": "securestring"
    }
  },
  "variables": {
    "vnet1Name": "vnet1",
    "vnet1Prefix": "10.0.0.0/16",
    "vnet1Subnet1Name": "Subnet-1-1",
    "vnet1Subnet1Prefix": "10.0.0.0/24",
    "vnet1Subnet2Name": "GatewaySubnet",
    "vnet1Subnet2Prefix": "10.0.1.0/24",
    "vnet1GatewayName": "gateway1",
    "vnet1GatewayIPName": "gateway1ip",
    "vnet2Name": "vnet2",
    "vnet2Prefix": "10.1.0.0/16",
    "vnet2Subnet1Name": "Subnet-2-1",
    "vnet2Subnet1Prefix": "10.1.0.0/24",
    "vnet2Subnet2Name": "GatewaySubnet",
    "vnet2Subnet2Prefix": "10.1.1.0/24",
    "vnet2GatewayName": "gateway2",
    "vnet2GatewayIPName": "gateway2ip",
    "vnet3Name": "vnet3",
    "vnet3Prefix": "10.2.0.0/16",
    "vnet3Subnet1Name": "Subnet-3-1",
    "vnet3Subnet1Prefix": "10.2.0.0/24",
    "vnet3Subnet2Name": "GatewaySubnet",
    "vnet3Subnet2Prefix": "10.2.1.0/24",
    "vnet3GatewayName": "gateway3",
    "vnet3GatewayIPName": "gateway3ip",
    "sharedSecret": "uniqueString(subscription().subscriptionId)]",
    "gatewayConnectionName12": "gatewayConnection12",
    "gatewayConnectionName21": "gatewayConnection21",
    "gatewayConnectionName13": "gatewayConnection13",
    "gatewayConnectionName31": "gatewayConnection31",
    "gatewayConnectionName23": "gatewayConnection23",
    "gatewayConnectionName32": "gatewayConnection32",
    "vnet1VnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnet1Name'))]",
    "vnet2VnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnet2Name'))]",
    "vnet3VnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnet3Name'))]",
    "vnet1GatewaySubnetRef": "[concat(variables('vnet1VnetId'),'/subnets/','GatewaySubnet')]",
    "vnet2GatewaySubnetRef": "[concat(variables('vnet2VnetId'),'/subnets/','GatewaySubnet')]",
    "vnet3GatewaySubnetRef": "[concat(variables('vnet3VnetId'),'/subnets/','GatewaySubnet')]",
    "vnet1Subnet1Ref": "[concat(variables('vnet1VnetId'),'/subnets/', variables('vnet1Subnet1Name'))]",
    "vnet2Subnet1Ref": "[concat(variables('vnet2VnetId'),'/subnets/', variables('vnet2Subnet1Name'))]",
    "vnet3Subnet1Ref": "[concat(variables('vnet3VnetId'),'/subnets/', variables('vnet3Subnet1Name'))]",
    "controlVMName": "controlVM",
    "controlVMPublicIpName": "controlVmPublicIp",
    "controlVmNicName": "controlVM",
    "controlVmNicVnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet1Name'))]",
    "controlVmNicSubnetRef": "[concat(variables('controlVmNicVnetID'), '/subnets/', variables('vnet1Subnet1Name'))]",
    "controlVMOSVersion": "2016-Datacenter",
    "controlVMSize": "Standard_A2",
    "nameServerVMSize": "Standard_A1",
    "nsVm1NicName": "ns1nic",
    "nsVm2NicName": "ns2nic",
    "linuxImagePublisher": "Canonical",
    "linuxImageOffer": "UbuntuServer",
    "ubuntuOSVersion": "16.04.0-LTS",
    "nsVm1Name": "ns1",
    "nsVm2Name": "ns2"
  },
  "resources": [
    {
      "name": "[variables('vnet1Name')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('region1')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "[variables('vnet1Name')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnet1Prefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vnet1Subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('vnet1Subnet1Prefix')]"
            }
          },
          {
            "name": "[variables('vnet1Subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('vnet1Subnet2Prefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('vnet2Name')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('region2')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "[variables('vnet2Name')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnet2Prefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vnet2Subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('vnet2Subnet1Prefix')]"
            }
          },
          {
            "name": "[variables('vnet2Subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('vnet2Subnet2Prefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('vnet3Name')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('region3')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "[variables('vnet3Name')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnet3Prefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vnet3Subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('vnet3Subnet1Prefix')]"
            }
          },
          {
            "name": "[variables('vnet3Subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('vnet3Subnet2Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vnet1GatewayIPName')]",
      "location": "[parameters('region1')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('controlVMPublicIpName')]",
      "location": "[parameters('region1')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vnet2GatewayIPName')]",
      "location": "[parameters('region2')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vnet3GatewayIPName')]",
      "location": "[parameters('region3')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('vnet1GatewayName')]",
      "location": "[parameters('region1')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('vnet1GatewayIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnet1Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnet1GatewaySubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vnet1GatewayIPName'))]"
              }
            },
            "name": "vnetGatewayConfig1"
          }
        ],
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": "false"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('vnet2GatewayName')]",
      "location": "[parameters('region2')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('vnet2GatewayIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnet2Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnet2GatewaySubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vnet2GatewayIPName'))]"
              }
            },
            "name": "vnetGatewayConfig2"
          }
        ],
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": "false"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('vnet3GatewayName')]",
      "location": "[parameters('region3')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('vnet3GatewayIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnet3Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnet3GatewaySubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vnet3GatewayIPName'))]"
              }
            },
            "name": "vnetGatewayConfig3"
          }
        ],
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": "false"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/connections",
      "name": "[variables('gatewayConnectionName12')]",
      "location": "[parameters('region1')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', variables('vnet1GatewayName'))]",
        "[concat('Microsoft.Network/virtualNetworkGateways/', variables('vnet2GatewayName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vnet1GatewayName'))]"
        },
        "virtualNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vnet2GatewayName'))]"
        },
        "connectionType": "Vnet2Vnet",
        "routingWeight": 3,
        "sharedKey": "[variables('sharedSecret')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/connections",
      "name": "[variables('gatewayConnectionName21')]",
      "location": "[parameters('region2')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', variables('vnet1GatewayName'))]",
        "[concat('Microsoft.Network/virtualNetworkGateways/', variables('vnet2GatewayName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vnet2GatewayName'))]"
        },
        "virtualNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vnet1GatewayName'))]"
        },
        "connectionType": "Vnet2Vnet",
        "routingWeight": 3,
        "sharedKey": "[variables('sharedSecret')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/connections",
      "name": "[variables('gatewayConnectionName13')]",
      "location": "[parameters('region1')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', variables('vnet1GatewayName'))]",
        "[concat('Microsoft.Network/virtualNetworkGateways/', variables('vnet3GatewayName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vnet1GatewayName'))]"
        },
        "virtualNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vnet3GatewayName'))]"
        },
        "connectionType": "Vnet2Vnet",
        "routingWeight": 3,
        "sharedKey": "[variables('sharedSecret')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/connections",
      "name": "[variables('gatewayConnectionName31')]",
      "location": "[parameters('region3')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', variables('vnet1GatewayName'))]",
        "[concat('Microsoft.Network/virtualNetworkGateways/', variables('vnet3GatewayName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vnet3GatewayName'))]"
        },
        "virtualNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vnet1GatewayName'))]"
        },
        "connectionType": "Vnet2Vnet",
        "routingWeight": 3,
        "sharedKey": "[variables('sharedSecret')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/connections",
      "name": "[variables('gatewayConnectionName23')]",
      "location": "[parameters('region2')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', variables('vnet2GatewayName'))]",
        "[concat('Microsoft.Network/virtualNetworkGateways/', variables('vnet3GatewayName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vnet2GatewayName'))]"
        },
        "virtualNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vnet3GatewayName'))]"
        },
        "connectionType": "Vnet2Vnet",
        "routingWeight": 3,
        "sharedKey": "[variables('sharedSecret')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/connections",
      "name": "[variables('gatewayConnectionName32')]",
      "location": "[parameters('region3')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', variables('vnet3GatewayName'))]",
        "[concat('Microsoft.Network/virtualNetworkGateways/', variables('vnet2GatewayName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vnet3GatewayName'))]"
        },
        "virtualNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vnet2GatewayName'))]"
        },
        "connectionType": "Vnet2Vnet",
        "routingWeight": 3,
        "sharedKey": "[variables('sharedSecret')]"
      }
    },
    {
      "name": "[variables('controlVmNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('region1')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet1Name'))]",
        "[resourceId('Microsoft.Network/publicIpAddresses', variables('controlVMPublicIpName'))]"
      ],
      "tags": {
        "displayName": "controlVmNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('controlVmNicSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('controlVMPublicIpName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('controlVmName')]",
      "location": "[parameters('region1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('controlVmNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('controlVmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('controlVMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[variables('controlVMOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('controlVmNicName'))]"
            }
          ]
        }
      }
    },
    {
      "name": "[variables('nsVm1NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('region2')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet2Name'))]"
      ],
      "tags": {
        "displayName": "[variables('nsVm1NicName')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('vnet2Subnet1Ref')]"
              },
              "privateIPAddress": "10.1.0.4"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('nsVm2NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('region3')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet3Name'))]"
      ],
      "tags": {
        "displayName": "[variables('nsVm2NicName')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('vnet3Subnet1Ref')]"
              },
              "privateIPAddress": "10.2.0.4"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('nsVm1Name')]",
      "location": "[parameters('region2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nsVm1NicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('nameServerVMSize')]"
        },
        "osProfile": {
          "computerName": "[variables('nsVm1Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('linuxImagePublisher')]",
            "offer": "[variables('linuxImageOffer')]",
            "sku": "[variables('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nsVm1NicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('nsVm2Name')]",
      "location": "[parameters('region3')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nsVm2NicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('nameServerVMSize')]"
        },
        "osProfile": {
          "computerName": "[variables('nsVm2Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('linuxImagePublisher')]",
            "offer": "[variables('linuxImageOffer')]",
            "sku": "[variables('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nsVm2NicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('nsVm1Name'),'/CustomScriptExtension')]",
      "location": "[parameters('region2')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('nsVm1Name'))]"
      ],
      "tags": {
        "displayName": "[concat(variables('nsVm1Name'),'setup')]"
      },
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/hansenms/PrivateTrafficManager/master/PrivateTrafficManager/scripts/setup_ns.sh"
          ],
          "commandToExecute": "[concat('bash ./setup_ns.sh ', parameters('adminPassword'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('nsVm2Name'),'/CustomScriptExtension')]",
      "location": "[parameters('region3')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('nsVm2Name'))]"
      ],
      "tags": {
        "displayName": "[concat(variables('nsVm2Name'),'setup')]"
      },
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/hansenms/PrivateTrafficManager/master/PrivateTrafficManager/scripts/setup_ns.sh"
          ],
          "commandToExecute": "[concat('bash ./setup_ns.sh ', parameters('adminPassword'))]"
        }
      }
    }
  ],
    "outputs": {}
  }
